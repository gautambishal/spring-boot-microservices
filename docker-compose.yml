version: "3.5"

services:
  postgres:
    container_name: postgres
    image: postgres:latest
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: 55
      POSTGRES_DB: microservice
    volumes:
        - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      micro_network:
        ipv4_address: 172.19.0.9


  zookeeper:
    container_name: zookeeper
    image: "docker.io/bitnami/zookeeper:3"
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    container_name: kafka
    image: "docker.io/bitnami/kafka:2-debian-10"
    ports:
      - "9092:9092"
    expose:
      - "9093"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_ADVERTISED_LISTENERS=INSIDE://kafka:9093,OUTSIDE://localhost:9092
      - KAFKA_LISTENER_SECURITY_PROTOCOL_MAP=INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      - KAFKA_LISTENERS=INSIDE://0.0.0.0:9093,OUTSIDE://0.0.0.0:9092
      - KAFKA_INTER_BROKER_LISTENER_NAME=INSIDE
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui
    ports:
      - "9090:8080"
    restart: always
    environment:
      - KAFKA_CLUSTERS_0_NAME=local
      - KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS=kafka:9093
      - KAFKA_CLUSTERS_0_ZOOKEEPER=localhost:2181


  eureka:
    build: ./eureka-server/
    image: eureka-server:0.1
    container_name: eureka
    ports:
      - "58683:58683"
    networks:
      micro_network:
        ipv4_address: 172.19.0.2
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M


  gateway:
    build: ./gateway/
    image: gateway:0.1
    container_name: gateway
    ports:
      - "8080:8080"
    links:
      - eureka
    volumes:
      - log:/app/log
    networks:
      micro_network:
        ipv4_address: 172.19.0.3
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 1G


  config:
    build: ./config-server/
    image: config-server:0.1
    container_name: config
    ports:
      - "8888:8888"
    links:
      - eureka
    volumes:
      - log:/app/log
    networks:
      micro_network:
        ipv4_address: 172.19.0.4
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M


  migration:
    build: ./migration/
    image: migration:0.1
    container_name: migration
    ports:
      - "56666:56666"
    volumes:
      - log:/app/log
    networks:
      micro_network:
        ipv4_address: 172.19.0.5
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M

  auth:
    build: ./auth-service/
    image: auth-service:0.1
    container_name: auth-service
    links:
      - eureka
    ports:
      - "58683:58683"
    networks:
      micro_network:
        ipv4_address: 172.19.0.6
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
  job:
    build: ./job-service/
    image: job-service:0.1
    container_name: job-service
    links:
      - eureka
    ports:
      - "50650:50650"
    networks:
      micro_network:
        ipv4_address: 172.19.0.7
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M
  user:
    build: ./user-service/
    image: user-service:0.1
    container_name: user-service
    links:
      - eureka
    ports:
      - "50621:50621"
    networks:
      micro_network:
        ipv4_address: 172.19.0.8
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 512M


networks:
  micro_network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "172.19.0.0/16"

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local
  postgres_data:
    driver: local
  log:
    driver: local